# DO NOT MODIFY THIS FILE
# These are the git-synchronized defaults; modifying these values will modify
# them for everyone else using this repository.
# Instead, modify (or create) the file `local.cfg` in your project directory

[logging]
# See logging.py for possible loglevel values
level = INFO

[paths]
# Relative paths are prepended with the directory containing the user’s `local.cfg` file
# They should always be uncommented (as otherwise paths are relative to the *default* config file)
project    = .
smtproject = .smt
labnotes   = labnotes
figures    = figures
data       = data
glue_shelf = ${figures}/glue.db

[prinz2004.paths]
simresults = ${paths:data}/simresults

[random]
entropy = 103291791999958856942451524772313066734

[mp]
# Valconfig will set any nested config with matching names to these values;
# in this case, that means these values config `emd.mp`
max_cores = 60
maxtasksperchild = 4
  # Lowering tasks per child is a workaround for the Prinz example,
  # which otherwise exceeds memory if we use an in-memory LRU cache.

[emd.paths]
# NB: If `figures` is uncommented above, it should also be uncommented here.
#     Note however that only code under md-source/notebooks will apply this
#     option; for example, code under md-source/project_code does not load
#     this config file. This is why we add symlinks to the code files we want to
#     show in the write-up in md-source/notebooks.
figures  = ${paths:figures}

[emd.caching]
# True: use joblib.Memory
# False: use functools.lru_cache
use_disk_cache = True

  [emd.caching.joblib] 
  location = .joblib-cache
  verbose  = 0
  # Other options are available – execute ``Config.caching.joblib?`` to see them

[figures]
backend = matplotlib

  [figures.matplotlib]
  # The 'colors' field is special: Other fields can refer to its contents
  # using dotted attributes
  # The special value "<default>" indicates to use the hardcoded default,
  # which is the Paul Tol color scheme file packaged with valconfig.contrib.
  colors = <default>
  style = ["base.mplstyle", "publish.mplstyle"]

    [figures.matplotlib.defaults]
    # Defaults are added to the options of compatible elements
    dpi = 150
    # Typical width of a column in two column layout: 9cm
    # PNAS small: 9cm x 6cm (3.54in x 2.36in)
    # PNAS medium: 11cm x 11cm (4.33in x 4.33in)
    # PNAS large: 18cm x 22cm (7.09in x 8.66in)
    # NOTE: The most reliable way to determine the size is to set
    #      `fig_inches` to a scalar (which determines the width),
    #      and then fixing the height with `aspect`.
    #      (As far as I can tell, when assigning a tuple to `fig_inches`,
    #      the height component is just ignored.)
    fig_inches = 3.4
    aspect = 1.333
    color = colors.bright.cycle

    [figures.matplotlib.renderer]
    widget_location = bottom
  
    [figures.matplotlib.Curve]
    linewidth  = 2

    [figures.matplotlib.Scatter]
    s          = 3

    [figures.matplotlib.Area]
    edgecolor  = None
    facecolor  = colors.pale.yellow

    [figures.matplotlib.Layout]
    sublabel_size = 10

  [figures.bokeh]
  colors = <default>

    [figures.bokeh.defaults]
    # Defaults are added to the options of all compatible elements
    width = 300
    color = colors.bright.cycle
  
    [figures.bokeh.renderer]
    widget_location = bottom
    
    [figures.bokeh.Curve]

    [figures.bokeh.Scatter]

    [figures.bokeh.Overlay]

    [figures.bokeh.Layout]
